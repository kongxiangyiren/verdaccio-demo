#
# 这是默认的配置文件。它允许所有用户做任何事情，
# 请仔细阅读文档和最佳实践
# 提高安全性。
#
# 查看更多配置文件示例:
# https://github.com/verdaccio/verdaccio/tree/5.x/conf
#
# 阅读最佳实践
# https://verdaccio.org/docs/best

# 包含所有包的目录的路径
storage: ./storage
# 包含插件的目录的路径
plugins: ./plugins

# https://verdaccio.org/docs/webui
web:
  enable: true
  title: 空巷一人的npm中心代理仓库
  favicon: './logo.png'
  logo: './logo.png'
  # gravatar头像
  gravatar: true
  pkgManagers:
    - npm
    - yarn
    - pnpm
  # by default packages are ordercer ascendant (asc|desc)
  # sort_packages: asc # 包的排序
  # 黑暗模式
  # darkMode: true
  html_cache: true
  # 默认显示所有特性
  login: true #登录
  primary_color: '#2185d0' #主题色
  showInfo: false #信息
  # showSettings: true
  # 结合darkMode，你可以强制特定的主题
  # showThemeSwitch: true
  showFooter: false
  # showSearch: true
  # showRaw: true
  # showDownloadTarball: true
  #  HTML tags injected after manifest <scripts/>
  scriptsBodyAfter:
  #   - '<script type="text/javascript" src="https://my.company.com/customJS.min.js"></script>'
  # HTML tags injected before ends </head>
  metaScripts:
    # - '<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>'
    # - '<script type="text/javascript" src="https://browser.sentry-cdn.com/5.15.5/bundle.min.js"></script>'
    - '<meta name="robots" content="noindex" />' #告诉搜索引擎不要对这个页面进行索引
  # HTML tags injected first child at <body/>
  # scriptsbodyBefore:
  #   - '<div id="myId">html before webpack scripts</div>'
  # Public path for template manifest scripts (only manifest)
  # publicPath: http://somedomain.org/

# https://verdaccio.org/docs/configuration#authentication
auth:
  htpasswd:
    file: ./htpasswd
    # 允许注册的最大用户数，默认为“+inf”。
    # 您可以将其设置为-1以禁用注册。
    # max_users: -1
    # 哈希算法，可选项是: "bcrypt", "md5", "sha1", "crypt".
    algorithm: bcrypt # 默认为crypt，但建议在新安装中使用bcrypt
    # “bcrypt”的轮数将被其他算法忽略。
    rounds: 10

# https://verdaccio.org/docs/configuration#uplinks
# a list of other known repositories we can talk to
uplinks:
  npmjs:
    url: https://registry.npmjs.com/
  yarn:
    url: https://registry.yarnpkg.com/
  taobao:
    url: https://registry.npmmirror.com/
  cnpm:
    url: https://r.cnpmjs.org/
  tencent:
    url: https://mirrors.cloud.tencent.com/npm/

# 了解如何保护您的软件包
# https://verdaccio.org/docs/protect-your-dependencies/
# https://verdaccio.org/docs/configuration#packages
packages:
  '@*/*':
    # scoped packages
    access: $all
    publish: $authenticated
    unpublish: $authenticated
    proxy: taobao npmjs

  '**':
    # 允许所有用户(包括未经身份验证的用户)读取和
    # 发布所有包
    #
    # 你可以指定用户名/组名(取决于你的认证插件)
    # and three keywords: "$all", "$anonymous", "$authenticated"
    access: $all

    # allow all known users to publish/publish packages
    # (anyone can register by default, remember?)
    publish: $authenticated
    unpublish: $authenticated

    # if package is not available locally, proxy requests to 'npmjs' registry
    proxy: taobao npmjs

# To improve your security configuration and  avoid dependency confusion
# consider removing the proxy property for private packages
# https://verdaccio.org/docs/best#remove-proxy-to-increase-security-at-private-packages

# https://verdaccio.org/docs/configuration#server
# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.
# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.
# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.
server:
  keepAliveTimeout: 60
  # Allow `req.ip` to resolve properly when Verdaccio is behind a proxy or load-balancer
  # See: https://expressjs.com/en/guide/behind-proxies.html
  # trustProxy: '127.0.0.1'

# https://verdaccio.org/docs/configuration#offline-publish
publish:
  allow_offline: true

# https://verdaccio.org/docs/configuration#url-prefix
# url_prefix: /verdaccio/
# VERDACCIO_PUBLIC_URL='https://somedomain.org';
# url_prefix: '/my_prefix'
# // url -> https://somedomain.org/my_prefix/
# VERDACCIO_PUBLIC_URL='https://somedomain.org';
# url_prefix: '/'
# // url -> https://somedomain.org/
# VERDACCIO_PUBLIC_URL='https://somedomain.org/first_prefix';
# url_prefix: '/second_prefix'
# // url -> https://somedomain.org/second_prefix/'

# https://verdaccio.org/docs/configuration#security
# security:
#   api:
#     legacy: true
#     jwt:
#       sign:
#         expiresIn: 29d
#       verify:
#         someProp: [value]
#    web:
#      sign:
#        expiresIn: 1h # 1 hour by default
#      verify:
#         someProp: [value]

# https://verdaccio.org/docs/configuration#user-rate-limit
# userRateLimit:
#   windowMs: 50000
#   max: 1000

# https://verdaccio.org/docs/configuration#max-body-size
# max_body_size: 10mb

# https://verdaccio.org/docs/configuration#listen-port
listen:
  # - localhost:4873            # default value
  # - http://localhost:4873     # same thing
  - 0.0.0.0:4873 # listen on all addresses (INADDR_ANY)
# - https://example.org:4873  # if you want to use https
# - "[::1]:4873"                # ipv6
# - unix:/tmp/verdaccio.sock    # unix socket

# The HTTPS configuration is useful if you do not consider use a HTTP Proxy
# https://verdaccio.org/docs/configuration#https
# https:
#   key: ./path/verdaccio-key.pem
#   cert: ./path/verdaccio-cert.pem
#   ca: ./path/verdaccio-csr.pem

# https://verdaccio.org/docs/configuration#proxy
# http_proxy: http://something.local/
# https_proxy: https://something.local/

# https://verdaccio.org/docs/configuration#notifications
# notify:
#   method: POST
#   headers: [{ "Content-Type": "application/json" }]
#   endpoint: https://usagge.hipchat.com/v2/room/3729485/notification?auth_token=mySecretToken
#   content: '{"color":"green","message":"New package published: * {{ name }}*","notify":true,"message_format":"text"}'

middlewares:
  audit:
    enabled: true

# https://verdaccio.org/docs/logger
# log settings
log: { type: stdout, format: pretty, level: info }
#experiments:
#  # support for npm token command
#  token: false
#  # disable writing body size to logs, read more on ticket 1912
#  bytesin_off: false
#  # enable tarball URL redirect for hosting tarball with a different server, the tarball_url_redirect can be a template string
#  tarball_url_redirect: 'https://mycdn.com/verdaccio/${packageName}/${filename}'
#  # the tarball_url_redirect can be a function, takes packageName and filename and returns the url, when working with a js configuration file
#  tarball_url_redirect(packageName, filename) {
#    const signedUrl = // generate a signed url
#    return signedUrl;
#  }

# translate your registry, api i18n not available yet
i18n:
  # list of the available translations https://github.com/verdaccio/verdaccio/blob/master/packages/plugins/ui-theme/src/i18n/ABOUT_TRANSLATIONS.md
  web: zh-CN
